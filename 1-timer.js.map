{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["const startButton = document.querySelector('[data-start]');\nconst datetimePicker = document.getElementById('datetime-picker');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet timerInterval = null;\n\n// Ініціалізація flatpickr\nflatpickr(datetimePicker, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      alert(\"Please choose a date in the future\");\n      startButton.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      startButton.disabled = false;\n    }\n  },\n});\n\n// Логіка кнопки Start\nstartButton.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n\n  startButton.disabled = true;\n  datetimePicker.disabled = true;\n\n  timerInterval = setInterval(() => {\n    const currentTime = new Date();\n    const timeDiff = userSelectedDate - currentTime;\n\n    if (timeDiff <= 0) {\n      clearInterval(timerInterval);\n      updateTimerDisplay(0);\n      datetimePicker.disabled = false;\n      return;\n    }\n\n    updateTimerDisplay(timeDiff);\n  }, 1000);\n});\n\n// Функція оновлення таймера\nfunction updateTimerDisplay(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  daysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}\n\n// Форматування значень\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["startButton","datetimePicker","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","timerInterval","selectedDates","selectedDate","timeDiff","updateTimerDisplay","ms","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"oDAAA,MAAMA,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAmB,KACnBC,EAAgB,KAGpB,UAAUN,EAAgB,CACxB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQO,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtB,MAAM,oCAAoC,EAC1CT,EAAY,SAAW,KAEvBM,EAAmBG,EACnBT,EAAY,SAAW,GAE1B,CACH,CAAC,EAGDA,EAAY,iBAAiB,QAAS,IAAM,CACrCM,IAELN,EAAY,SAAW,GACvBC,EAAe,SAAW,GAE1BM,EAAgB,YAAY,IAAM,CAEhC,MAAMG,EAAWJ,EADG,IAAI,KAGxB,GAAII,GAAY,EAAG,CACjB,cAAcH,CAAa,EAC3BI,EAAmB,CAAC,EACpBV,EAAe,SAAW,GAC1B,MACD,CAEDU,EAAmBD,CAAQ,CAC5B,EAAE,GAAI,EACT,CAAC,EAGD,SAASC,EAAmBC,EAAI,CAC9B,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EACtDV,EAAO,YAAcgB,EAAeL,CAAI,EACxCV,EAAQ,YAAce,EAAeJ,CAAK,EAC1CV,EAAU,YAAcc,EAAeH,CAAO,EAC9CV,EAAU,YAAca,EAAeF,CAAO,CAChD,CAGA,SAASC,EAAUL,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}